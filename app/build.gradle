apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.plugin.serialization'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'org.jetbrains.kotlin.plugin.compose'

android {
    namespace = "com.sygic.example.ipcdemo3d"
    compileSdk 35

    defaultConfig {
        applicationId "com.sygic.example.ipcdemo3d"
        minSdkVersion 21
        targetSdkVersion 35
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.3"
    }
    buildFeatures {
        buildConfig = true
        compose = true
    }

    def DIM_PACKAGE = "NaviPackage"
    flavorDimensions DIM_PACKAGE

    productFlavors {
        truck {
            dimension DIM_PACKAGE
            buildConfigField "String", "NAVI_PACKAGE", "\"com.sygic.truck\""
        }

        fleet {
            dimension DIM_PACKAGE
            buildConfigField "String", "NAVI_PACKAGE", "\"com.sygic.fleet\""
        }
    }

    signingConfigs {
        release {
            Properties localProp = new Properties()
            localProp.load(project.rootProject.file('local.properties').newDataInputStream())
            def keystoreSett = localProp.getProperty('keystore.settings', null)
            if (keystoreSett != null) {
                File signFile = file(keystoreSett)
                if (signFile.exists()) {
                    Properties properties = new Properties()
                    properties.load(signFile.newDataInputStream())

                    storeFile file(properties.getProperty('key.store', null))
                    storePassword properties.getProperty('key.store.password', null)
                    keyAlias properties.getProperty('key.alias', null)
                    keyPassword properties.getProperty('key.alias.password', null)
                } else {
                    logger.warn("File " + signFile + " does not exist. App will not be signed.")
                }
            } else {
                logger.warn("keystore.settings file not defined in local.properties. App will not be signed.")
            }
        } // release
    } // signingConfigs

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

}

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.aar'])

    implementation 'androidx.activity:activity-compose:1.10.0'

    def compose = "1.7.7"
    implementation "androidx.compose.ui:ui:$compose"
    implementation "androidx.compose.material:material:$compose"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose"
    implementation "androidx.compose.ui:ui-tooling:$compose"
    implementation "androidx.compose.material:material-icons-extended:$compose"

    implementation 'androidx.compose.material3:material3:1.4.0-alpha07'

    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.8.0'
    debugImplementation 'androidx.compose.ui:ui-tooling:1.7.7'

    def navigation = "2.8.6"
    implementation("androidx.navigation:navigation-compose:$navigation")

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "com.sygic.fleet:remote-api:6.2.0"
    implementation 'androidx.core:core-ktx:1.15.0'
}
